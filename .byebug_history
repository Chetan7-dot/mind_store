continue
"#{max_char[0]}: #{max_char[1]}"
n
char_counts
continue
char_counts
 char_counts.key?(char)
continue
n
char
 char_counts.key?(char)
continue
term
Question.where("lower(qns_type) LIKE ?", "%#{term.downcase}%")
n
 params[:search]
continue
n
params[:search]
params
param
@results
n
continue
 Question.where("lower(qns_description.body) LIKE ?", "%#{term.downcase}%")
n
 Question.where("lower(qns_description.body) LIKE ?", "%#{term.downcase}%")
params
continueparams
continue
Question.first.qns_description.body.html_safe
Question.first.qns_description.body
Question.first.qns_description
Question.first
continue
Question.second
Question.first
 Question.where("lower(qns_description) LIKE ?", "%#{term.downcase}%")
term.downcase
n
term.downcase
Question.where("lower(qns_description) LIKE ?", "%#{term.downcase}%")
params
